// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}


// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.1.
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}


// Creates text alignment classes based on screen size
// TODO this would be nice to add to the framework
@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    // Provide text `[text-{bp}]` attributes for aligning text based on screen size
    [text#{$infix}-center] {
      text-align: center;
    }

    [text#{$infix}-left] {
      text-align: left;
    }

    [text#{$infix}-right] {
      text-align: right;
    }

    [hidden#{$infix}-up] {
      display: none;
    }
  }

  @include media-breakpoint-down($breakpoint, $grid-breakpoints) {
    [hidden#{$infix}-down] {
      display: none;
    }
  }


//start


  ion-fab[top1] {
    top: 0 !important;
  }




.blackcontainer{
    top: 0;
    left:0;
    width:100%;
    height: 100%;
    background:black;
    position: fixed;
    opacity: 0.7;
    
}

.popup{
    width: 50%;
    left:258px;
    top: 60px;
    position: fixed;
        height: 500px;
}


.popup1{
    width: 83%;
    left: 78px;
    top: 60px;
    position: fixed;
        height: 500px;
}

.popup2{
    width: 83%;
    left: 25px;
    top: 38px;
    position: fixed;
    height: 480px;

}

.btn{

    text-align: center;
    margin: 10px 0px;
}

.btnR{
    width: 33px !important;
    height: 38px;
    right: 16px;
    font-size: 22px !important;
    top: 15px;
    position: absolute !important ;
    background: #EF5350;
    color: white;
}


.icHeaderText {
    font-size: 15px !important;
    
}

.icTitle {
    border-bottom: 1px solid !important;
    margin-bottom: 10px !important;
    padding: 10px !important;
}


.cm{
    height: 100%;
}

.tnUserRow {border-bottom: 2px solid #efefef;}





//overwrite default css

button[ion-fab] {
    overflow: visible;
    position: relative;
    contain: layout;

    ion-label {
        position: absolute;
        top: -8px;
        right: 40px;

        color: white;
        background-color: rgba(0,0,0,0.7);
        line-height: 24px;
        padding: 4px 8px;
        border-radius: 4px;
    }
}

.item-input ion-input, .item-input ion-textarea {
    border-radius: 5px;
    background: whitesmoke;
    padding-left: 5pt 0 !important;
}

.item-input ion-input, .item-input ion-textarea.ng-dirty.ng-valid.ng-touched {
    border: 0;
}


ion-datetime.datetime.datetime-md{
    border-radius: 5px;
    background: whitesmoke;
    padding-left: 5pt 0 !important;
}


ion-datetime.datetime.datetime-md.ng-dirty.ng-valid.ng-touched {
    border: 0;
}

ion-datetime.datetime.datetime-ios.ng-dirty.ng-valid.ng-touched {
    border: 0;
}

ion-datetime.datetime.datetime-ios{
    border-radius: 5px;
    background: whitesmoke;
    padding-left: 5pt 0 !important;

}

ion-select.select.select-md{
    border-radius: 5px;
    background: whitesmoke;
    padding-left: 5pt 0 !important;
}

ion-select.select.select-ios{
    border-radius: 5px;
    background: whitesmoke;
    padding-left: 5pt 0 !important;
}

ion-select.select.select-ios.ng-dirty.ng-valid.ng-touched{
    border: 0;
}
ion-select.select.select-md.ng-dirty.ng-valid.ng-touched{
    border: 0;
}


.action-sheet-group {
    overflow: auto !important; 
}

.til {
    top: 36%;
    font-size: 2.2em;
    width: 100%;
  }

  .subtil{
    font-size: 1.0em;
    top: 52%;
    width: 100%;
  }

.item.item-block .item-inner {
    border-bottom: 0 !important;
}

.conta{
    width: 45.5% !important;
    display: inline-block !important;
}



//color scheme workout

.bar-button-default-md, .bar-button-clear-md-default, .bar-button-md-default, .bar-button-default-ios, .bar-button-default.bar-button-ios-default, .bar-button-clear-ios-default {
    color: white !important;
 }


//end


}
